{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"memchr","disambiguator":[14626603937068458082,5196278642193782765]},"crate_root":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src","external_crates":[{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[16825574870306022575,8948129443530490784]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[2452001442079620809,7031898473987783586]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[257026008801274955,12461963386350563443]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":10,"id":{"name":"libc","disambiguator":[9180044540735418160,2562259712382598141]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7912589894543166650,13725509848790997879]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[5417497425546992192,18087750996247976147]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5349535592456244256,17348771569697999709]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[1978045193647391660,8970976202938663567]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7876247173013449824,6216286835442247547]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","num":3,"id":{"name":"alloc","disambiguator":[13580575657579695419,13036432567502798103]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":33411,"line_start":1,"line_end":1062,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":33411,"line_start":1,"line_end":1062,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\memchr-2.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":49}],"decl_id":null,"docs":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe\ninterface to the corresponding functions in `libc`.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":138,"byte_end":160,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":161,"byte_end":186,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2837,"byte_end":2843,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":2147483657},{"krate":0,"index":2147483658},{"krate":0,"index":2147483659}],"decl_id":null,"docs":" An iterator for memchr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3080,"byte_end":3083,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr<'a>>::new","value":"fn (needle: u8, haystack: &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4316,"byte_end":4322,"line_start":162,"line_end":162,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4262,"byte_end":4279,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6381,"byte_end":6388,"line_start":221,"line_end":221,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memrchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6327,"byte_end":6344,"line_start":220,"line_end":220,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7795,"byte_end":7802,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":2147483664},{"krate":0,"index":2147483665},{"krate":0,"index":2147483666},{"krate":0,"index":2147483667}],"decl_id":null,"docs":" An iterator for Memchr2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8058,"byte_end":8061,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2<'a>>::new","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8629,"byte_end":8636,"line_start":295,"line_end":295,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":9781,"byte_end":9788,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":2147483673},{"krate":0,"index":2147483674},{"krate":0,"index":2147483675},{"krate":0,"index":2147483676},{"krate":0,"index":2147483677}],"decl_id":null,"docs":" An iterator for Memchr3\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":10052,"byte_end":10055,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3<'a>>::new","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":10754,"byte_end":10761,"line_start":373,"line_end":373,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":12547,"byte_end":12553,"line_start":428,"line_end":428,"column_start":12,"column_end":18},"name":"memchr","qualname":"::fallback::memchr","value":"fn (x: u8, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the first index matching the byte `a` in `text`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":14397,"byte_end":14404,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"memrchr","qualname":"::fallback::memrchr","value":"fn (x: u8, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the last index matching the byte `a` in `text`.\n","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2976,"byte_end":2982,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"kind":"Impl","from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3268,"byte_end":3274,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"kind":"Impl","from":{"krate":0,"index":18},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3549,"byte_end":3555,"line_start":136,"line_end":136,"column_start":34,"column_end":40},"kind":"Impl","from":{"krate":0,"index":18},"to":{"krate":2,"index":1868}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7953,"byte_end":7960,"line_start":269,"line_end":269,"column_start":10,"column_end":17},"kind":"Impl","from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8294,"byte_end":8301,"line_start":281,"line_end":281,"column_start":23,"column_end":30},"kind":"Impl","from":{"krate":0,"index":31},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":9956,"byte_end":9963,"line_start":339,"line_end":339,"column_start":10,"column_end":17},"kind":"Impl","from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,109,101,109,99,104,114,45,50,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":10370,"byte_end":10377,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"kind":"Impl","from":{"krate":0,"index":40},"to":{"krate":2,"index":1692}}]}