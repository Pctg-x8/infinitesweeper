{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"strsim","disambiguator":[6812058403887833767,8218694621771283175]},"crate_root":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[16825574870306022575,8948129443530490784]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[2452001442079620809,7031898473987783586]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[257026008801274955,12461963386350563443]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7912589894543166650,13725509848790997879]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[5417497425546992192,18087750996247976147]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5349535592456244256,17348771569697999709]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[1978045193647391660,8970976202938663567]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7876247173013449824,6216286835442247547]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":3,"id":{"name":"alloc","disambiguator":[13580575657579695419,13036432567502798103]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":18532,"line_start":1,"line_end":698,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":18532,"line_start":1,"line_end":698,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":16},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" This library implements string similarity metrics.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483658},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":184,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":24},"name":"DifferentLengthArgs","qualname":"::StrSimError::DifferentLengthArgs","value":"StrSimError::DifferentLengthArgs","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":15},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":166,"byte_end":177,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"StrSimError","qualname":"::StrSimError","value":"StrSimError::{DifferentLengthArgs}","parent":null,"children":[{"krate":0,"index":2147483658}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":216,"byte_end":229,"line_start":12,"line_end":12,"column_start":10,"column_end":23},"name":"HammingResult","qualname":"::HammingResult","value":"Result<usize, StrSimError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":601,"byte_end":608,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"hamming","qualname":"::hamming","value":"fn (a: &str, b: &str) -> HammingResult","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of positions in the two strings where the characters\n differ. Returns an error if the strings have different lengths.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1240,"byte_end":1244,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"jaro","qualname":"::jaro","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Jaro similarity between two strings. The returned value\n is between 0.0 and 1.0 (higher value means more similar).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3070,"byte_end":3082,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"jaro_winkler","qualname":"::jaro_winkler","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Like Jaro but gives a boost to strings that have a common prefix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3838,"byte_end":3849,"line_start":143,"line_end":143,"column_start":8,"column_end":19},"name":"levenshtein","qualname":"::levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the minimum number of insertions, deletions, and substitutions\n required to change one string into the other.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4810,"byte_end":4822,"line_start":182,"line_end":182,"column_start":8,"column_end":20},"name":"osa_distance","qualname":"::osa_distance","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like Levenshtein but allows for adjacent transpositions. Each substring can\n only be edited once.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6616,"byte_end":6635,"line_start":236,"line_end":236,"column_start":8,"column_end":27},"name":"damerau_levenshtein","qualname":"::damerau_levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like optimal string alignment, but substrings can be edited an unlimited\n number of times, and the triangle inequality holds.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}