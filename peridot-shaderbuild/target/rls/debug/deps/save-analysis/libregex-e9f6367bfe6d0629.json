{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"regex","disambiguator":[16870649926897844512,7017339571005138985]},"crate_root":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src","external_crates":[{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":17,"id":{"name":"regex_syntax","disambiguator":[17786400590087862453,13902072346343909926]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":14,"id":{"name":"unreachable","disambiguator":[12215775439374244526,1475047784601100984]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":11,"id":{"name":"memchr","disambiguator":[14626603937068458082,5196278642193782765]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[16825574870306022575,8948129443530490784]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[2452001442079620809,7031898473987783586]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[257026008801274955,12461963386350563443]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":19,"id":{"name":"utf8_ranges","disambiguator":[2033913328091566650,11273177762462119848]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[4664172787563837850,10148395839679618632]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":13,"id":{"name":"thread_local","disambiguator":[14417651881456568435,10159147056741286311]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":10,"id":{"name":"aho_corasick","disambiguator":[6861005601205566302,1026291555908247239]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7912589894543166650,13725509848790997879]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[5417497425546992192,18087750996247976147]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5349535592456244256,17348771569697999709]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":18,"id":{"name":"ucd_util","disambiguator":[1045491327034275539,6040672210809109935]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":15,"id":{"name":"void","disambiguator":[13865615848957109619,3707833935691922734]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":12,"id":{"name":"libc","disambiguator":[9180044540735418160,2562259712382598141]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[1978045193647391660,8970976202938663567]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7876247173013449824,6216286835442247547]}},{"file_name":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","num":3,"id":{"name":"alloc","disambiguator":[13580575657579695419,13036432567502798103]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":23319,"line_start":11,"line_end":681,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18526,"byte_end":18531,"line_start":534,"line_end":534,"column_start":16,"column_end":21},"name":"Error","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18590,"byte_end":18591,"line_start":536,"line_end":536,"column_start":30,"column_end":31},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18654,"byte_end":18655,"line_start":538,"line_end":538,"column_start":34,"column_end":35},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18710,"byte_end":18711,"line_start":540,"line_end":540,"column_start":26,"column_end":27},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18759,"byte_end":18768,"line_start":542,"line_end":542,"column_start":19,"column_end":28},"name":"Locations","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22438,"byte_end":22439,"line_start":640,"line_end":640,"column_start":32,"column_end":33},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22476,"byte_end":22477,"line_start":641,"line_end":641,"column_start":36,"column_end":37},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22501,"byte_end":22502,"line_start":642,"line_end":642,"column_start":23,"column_end":24},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22531,"byte_end":22532,"line_start":643,"line_end":643,"column_start":28,"column_end":29},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22556,"byte_end":22565,"line_start":644,"line_end":644,"column_start":23,"column_end":32},"name":"Locations","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,109,111,100,46,114,115],"byte_start":270824,"byte_end":270825,"line_start":1,"line_end":1,"column_start":20,"column_end":21},"name":"*","value":"Teddy"},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,109,111,100,46,114,115],"byte_start":271615,"byte_end":271616,"line_start":1,"line_end":1,"column_start":20,"column_end":21},"name":"*","value":"Teddy"},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23119,"byte_end":23127,"line_start":676,"line_end":676,"column_start":22,"column_end":30},"name":"Compiler","value":""},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23243,"byte_end":23258,"line_start":679,"line_end":679,"column_start":22,"column_end":37},"name":"LiteralSearcher","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":23319,"line_start":11,"line_end":681,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":33},{"krate":0,"index":57},{"krate":0,"index":67},{"krate":0,"index":161},{"krate":0,"index":268},{"krate":0,"index":278},{"krate":0,"index":389},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":489},{"krate":0,"index":592},{"krate":0,"index":617},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":818},{"krate":0,"index":937},{"krate":0,"index":955}],"decl_id":null,"docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18182,"byte_end":18204,"line_start":520,"line_end":520,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22399,"byte_end":22404,"line_start":639,"line_end":639,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bytes","value":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":"Match regular expressions on arbitrary bytes.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22363,"byte_end":22390,"line_start":638,"line_end":638,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25220,"byte_end":25231,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"should_exec","qualname":"::backtrack::should_exec","value":"fn (num_insts: usize, text_len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the given regex and input should be executed by this\n engine with reasonable memory usage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25710,"byte_end":25717,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Bounded","qualname":"::backtrack::Bounded","value":"Bounded {  }","parent":null,"children":[{"krate":0,"index":2147484019},{"krate":0,"index":2147484020},{"krate":0,"index":2147484021},{"krate":0,"index":2147484022},{"krate":0,"index":2147484023}],"decl_id":null,"docs":" A backtracking matching engine.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25994,"byte_end":25999,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Cache","qualname":"::backtrack::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484034},{"krate":0,"index":2147484035}],"decl_id":null,"docs":" Shared cached state between multiple invocations of a backtracking engine\n in the same thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26133,"byte_end":26136,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (_prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26923,"byte_end":26927,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"exec","qualname":"<Bounded<'a, 'm, 'r, 's, I>>::exec","value":"fn (prog: &'r Program, cache: &ProgramCache, matches: &'m mut [bool], slots: &'s mut [Slot], input: I, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,117,116,102,56,46,114,115],"byte_start":35447,"byte_end":35456,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"next_utf8","qualname":"::utf8::next_utf8","value":"fn (text: &[u8], i: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest possible index of the next valid UTF-8 sequence\n starting after `i`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,117,116,102,56,46,114,115],"byte_start":36328,"byte_end":36339,"line_start":52,"line_end":52,"column_start":8,"column_end":19},"name":"decode_utf8","qualname":"::utf8::decode_utf8","value":"fn (src: &[u8]) -> Option<(char, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Decode a single UTF-8 sequence into a single Unicode codepoint from `src`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,117,116,102,56,46,114,115],"byte_start":36311,"byte_end":36320,"line_start":51,"line_end":51,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,117,116,102,56,46,114,115],"byte_start":38674,"byte_end":38690,"line_start":123,"line_end":123,"column_start":8,"column_end":24},"name":"decode_last_utf8","qualname":"::utf8::decode_last_utf8","value":"fn (src: &[u8]) -> Option<(char, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like `decode_utf8`, but decodes the last UTF-8 sequence in `src` instead\n of the first.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44157,"byte_end":44165,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Compiler","qualname":"::compile::Compiler","value":"Compiler {  }","parent":null,"children":[{"krate":0,"index":2147483665},{"krate":0,"index":2147483666},{"krate":0,"index":2147483667},{"krate":0,"index":2147483668},{"krate":0,"index":2147483669},{"krate":0,"index":2147483670},{"krate":0,"index":2147483671},{"krate":0,"index":2147483672}],"decl_id":null,"docs":" A compiler translates a regular expression AST to a sequence of\n instructions. The sequence of instructions represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44576,"byte_end":44579,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Compiler>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":45174,"byte_end":45184,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<Compiler>::size_limit","value":"fn (mut self, size_limit: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":45928,"byte_end":45933,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Compiler>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":46216,"byte_end":46225,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Compiler>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":46708,"byte_end":46711,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"dfa","qualname":"<Compiler>::dfa","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":46946,"byte_end":46953,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Compiler>::reverse","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":47307,"byte_end":47314,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"compile","qualname":"<Compiler>::compile","value":"fn (mut self, exprs: &[Hir]) -> result::Result<Program, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":87513,"byte_end":87521,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"can_exec","qualname":"::dfa::can_exec","value":"fn (insts: &Program) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if the given program can be executed by a DFA.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1031},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":88513,"byte_end":88518,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"Cache","qualname":"::dfa::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484077},{"krate":0,"index":2147484078},{"krate":0,"index":2147484079}],"decl_id":null,"docs":" A reusable cache of DFA states.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":92496,"byte_end":92499,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"Fsm","qualname":"::dfa::Fsm","value":"Fsm {  }","parent":null,"children":[{"krate":0,"index":2147484089},{"krate":0,"index":2147484090},{"krate":0,"index":2147484091},{"krate":0,"index":2147484092},{"krate":0,"index":2147484093},{"krate":0,"index":2147484094},{"krate":0,"index":2147484095}],"decl_id":null,"docs":" Fsm encapsulates the actual execution of the DFA.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484098},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94328,"byte_end":94333,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"Match","qualname":"::dfa::Result::Match","value":"Result::Match(T)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484100},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94342,"byte_end":94349,"line_start":220,"line_end":220,"column_start":5,"column_end":12},"name":"NoMatch","qualname":"::dfa::Result::NoMatch","value":"Result::NoMatch(usize)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484102},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94362,"byte_end":94366,"line_start":221,"line_end":221,"column_start":5,"column_end":9},"name":"Quit","qualname":"::dfa::Result::Quit","value":"Result::Quit","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1047},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94312,"byte_end":94318,"line_start":218,"line_end":218,"column_start":10,"column_end":16},"name":"Result","qualname":"::dfa::Result","value":"Result::{Match, NoMatch, Quit}","parent":null,"children":[{"krate":0,"index":2147484098},{"krate":0,"index":2147484100},{"krate":0,"index":2147484102}],"decl_id":null,"docs":" The result of running the DFA.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94462,"byte_end":94470,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Result<T>>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94756,"byte_end":94759,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"map","qualname":"<Result<T>>::map","value":"fn <U, F> (self, mut f: F) -> Result<U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":101416,"byte_end":101419,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":102526,"byte_end":102533,"line_start":459,"line_end":459,"column_start":12,"column_end":19},"name":"forward","qualname":"<Fsm<'a>>::forward","value":"fn (prog: &'a Program, cache: &ProgramCache, quit_after_match: bool, text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":103577,"byte_end":103584,"line_start":492,"line_end":492,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Fsm<'a>>::reverse","value":"fn (prog: &'a Program, cache: &ProgramCache, quit_after_match: bool, text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":104652,"byte_end":104664,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"name":"forward_many","qualname":"<Fsm<'a>>::forward_many","value":"fn (prog: &'a Program, cache: &ProgramCache, matches: &mut [bool], text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484120},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":158581,"byte_end":158587,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" A syntax error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484122},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":158707,"byte_end":158721,"line_start":21,"line_end":21,"column_start":5,"column_end":19},"name":"CompiledTooBig","qualname":"::error::Error::CompiledTooBig","value":"Error::CompiledTooBig(usize)","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" The compiled program exceeded the set size limit.\n The argument is the size limit imposed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484124},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":159008,"byte_end":159023,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1096},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":158545,"byte_end":158550,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Syntax, CompiledTooBig, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":2147484120},{"krate":0,"index":2147484122},{"krate":0,"index":2147484124}],"decl_id":null,"docs":" An error that occurred during parsing or compiling a regular expression.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":162040,"byte_end":162044,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Exec","qualname":"::exec::Exec","value":"Exec {  }","parent":null,"children":[{"krate":0,"index":2147483710},{"krate":0,"index":2147483711}],"decl_id":null,"docs":" `Exec` manages the execution of a regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":162415,"byte_end":162425,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"ExecNoSync","qualname":"::exec::ExecNoSync","value":"ExecNoSync {  }","parent":null,"children":[{"krate":0,"index":2147484125},{"krate":0,"index":2147484126}],"decl_id":null,"docs":" `ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\n means it is no longer Sync, but we can now avoid the overhead of\n synchronization to fetch the cache.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":162664,"byte_end":162677,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"ExecNoSyncStr","qualname":"::exec::ExecNoSyncStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":164385,"byte_end":164396,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"ExecBuilder","qualname":"::exec::ExecBuilder","value":"ExecBuilder {  }","parent":null,"children":[{"krate":0,"index":2147483715},{"krate":0,"index":2147483716},{"krate":0,"index":2147483717},{"krate":0,"index":2147483718}],"decl_id":null,"docs":" Facilitates the construction of an executor by exposing various knobs\n to control how a regex is executed and what kinds of resources it's\n permitted to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":164997,"byte_end":165000,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecBuilder>::new","value":"fn (re: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":165326,"byte_end":165334,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"new_many","qualname":"<ExecBuilder>::new_many","value":"fn <I, S> (res: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":165634,"byte_end":165645,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"new_options","qualname":"<ExecBuilder>::new_options","value":"fn (opts: RegexOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166143,"byte_end":166152,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"automatic","qualname":"<ExecBuilder>::automatic","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166467,"byte_end":166470,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ExecBuilder>::nfa","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166961,"byte_end":166981,"line_start":175,"line_end":175,"column_start":12,"column_end":32},"name":"bounded_backtracking","qualname":"<ExecBuilder>::bounded_backtracking","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":167549,"byte_end":167554,"line_start":189,"line_end":189,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ExecBuilder>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":167825,"byte_end":167834,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<ExecBuilder>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":167957,"byte_end":167964,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ExecBuilder>::unicode","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":171073,"byte_end":171078,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"build","qualname":"<ExecBuilder>::build","value":"fn (self) -> Result<Exec, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":196482,"byte_end":196497,"line_start":1010,"line_end":1010,"column_start":12,"column_end":27},"name":"many_matches_at","qualname":"<ExecNoSync<'c>>::many_matches_at","value":"fn (&self, matches: &mut [bool], text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":198242,"byte_end":198258,"line_start":1064,"line_end":1064,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSync<'c>>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":198387,"byte_end":198403,"line_start":1070,"line_end":1070,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSyncStr<'c>>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":198602,"byte_end":198610,"line_start":1078,"line_end":1078,"column_start":12,"column_end":20},"name":"searcher","qualname":"<Exec>::searcher","value":"fn (&self) -> ExecNoSync","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199001,"byte_end":199013,"line_start":1088,"line_end":1088,"column_start":12,"column_end":24},"name":"searcher_str","qualname":"<Exec>::searcher_str","value":"fn (&self) -> ExecNoSyncStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199139,"byte_end":199149,"line_start":1093,"line_end":1093,"column_start":12,"column_end":22},"name":"into_regex","qualname":"<Exec>::into_regex","value":"fn (self) -> re_unicode::Regex","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199280,"byte_end":199294,"line_start":1098,"line_end":1098,"column_start":12,"column_end":26},"name":"into_regex_set","qualname":"<Exec>::into_regex_set","value":"fn (self) -> re_set::unicode::RegexSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199469,"byte_end":199484,"line_start":1103,"line_end":1103,"column_start":12,"column_end":27},"name":"into_byte_regex","qualname":"<Exec>::into_byte_regex","value":"fn (self) -> re_bytes::Regex","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199642,"byte_end":199661,"line_start":1108,"line_end":1108,"column_start":12,"column_end":31},"name":"into_byte_regex_set","qualname":"<Exec>::into_byte_regex_set","value":"fn (self) -> re_set::bytes::RegexSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199848,"byte_end":199861,"line_start":1114,"line_end":1114,"column_start":12,"column_end":25},"name":"regex_strings","qualname":"<Exec>::regex_strings","value":"fn (&self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":200018,"byte_end":200031,"line_start":1121,"line_end":1121,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Exec>::capture_names","value":"fn (&self) -> &[Option<String>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":200206,"byte_end":200222,"line_start":1127,"line_end":1127,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<Exec>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":386},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205609,"byte_end":205621,"line_start":1272,"line_end":1272,"column_start":10,"column_end":22},"name":"ProgramCache","qualname":"::exec::ProgramCache","value":"RefCell<ProgramCacheInner>","parent":null,"children":[],"decl_id":null,"docs":" `ProgramCache` maintains reusable allocations for each matching engine\n available to a particular program.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1126},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205688,"byte_end":205705,"line_start":1275,"line_end":1275,"column_start":12,"column_end":29},"name":"ProgramCacheInner","qualname":"::exec::ProgramCacheInner","value":"ProgramCacheInner { pikevm, backtrack, dfa, dfa_reverse }","parent":null,"children":[{"krate":0,"index":2147484150},{"krate":0,"index":2147484151},{"krate":0,"index":2147484152},{"krate":0,"index":2147484153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484150},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205716,"byte_end":205722,"line_start":1276,"line_end":1276,"column_start":9,"column_end":15},"name":"pikevm","qualname":"::exec::ProgramCacheInner::pikevm","value":"pikevm::Cache","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484151},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205747,"byte_end":205756,"line_start":1277,"line_end":1277,"column_start":9,"column_end":18},"name":"backtrack","qualname":"::exec::ProgramCacheInner::backtrack","value":"backtrack::Cache","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484152},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205784,"byte_end":205787,"line_start":1278,"line_end":1278,"column_start":9,"column_end":12},"name":"dfa","qualname":"::exec::ProgramCacheInner::dfa","value":"dfa::Cache","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484153},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205809,"byte_end":205820,"line_start":1279,"line_end":1279,"column_start":9,"column_end":20},"name":"dfa_reverse","qualname":"::exec::ProgramCacheInner::dfa_reverse","value":"dfa::Cache","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":207923,"byte_end":207933,"line_start":8,"line_end":8,"column_start":8,"column_end":18},"name":"expand_str","qualname":"::expand::expand_str","value":"fn (caps: &re_unicode::Captures, mut replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":209194,"byte_end":209206,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"expand_bytes","qualname":"::expand::expand_bytes","value":"fn (caps: &re_bytes::Captures, mut replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":403},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,102,114,101,113,115,46,114,115],"byte_start":214468,"byte_end":214484,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"BYTE_FREQUENCIES","qualname":"::freqs::BYTE_FREQUENCIES","value":"[u8; 256]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":219637,"byte_end":219644,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"InputAt","qualname":"::input::InputAt","value":"InputAt {  }","parent":null,"children":[{"krate":0,"index":2147484172},{"krate":0,"index":2147484173},{"krate":0,"index":2147484174},{"krate":0,"index":2147484175}],"decl_id":null,"docs":" Represents a location in the input.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":219626,"byte_end":219715,"line_start":25,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":219816,"byte_end":219824,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"is_start","qualname":"<InputAt>::is_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":219951,"byte_end":219957,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"is_end","qualname":"<InputAt>::is_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220203,"byte_end":220207,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"char","qualname":"<InputAt>::char","value":"fn (&self) -> Char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220301,"byte_end":220305,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"byte","qualname":"<InputAt>::byte","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220432,"byte_end":220435,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"len","qualname":"<InputAt>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220580,"byte_end":220588,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InputAt>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220696,"byte_end":220699,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"pos","qualname":"<InputAt>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220820,"byte_end":220828,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"next_pos","qualname":"<InputAt>::next_pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":425},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":220954,"byte_end":220959,"line_start":79,"line_end":79,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::Input","value":"Input","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221032,"byte_end":221034,"line_start":81,"line_end":81,"column_start":8,"column_end":10},"name":"at","qualname":"::input::Input::at","value":"fn (&self, i: usize) -> InputAt","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221211,"byte_end":221220,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"next_char","qualname":"::input::Input::next_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221401,"byte_end":221414,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"previous_char","qualname":"::input::Input::previous_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221554,"byte_end":221568,"line_start":95,"line_end":95,"column_start":8,"column_end":22},"name":"is_empty_match","qualname":"::input::Input::is_empty_match","value":"fn (&self, at: InputAt, empty: &InstEmptyLook) -> bool","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221675,"byte_end":221684,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"prefix_at","qualname":"::input::Input::prefix_at","value":"fn (&self, prefixes: &LiteralSearcher, at: InputAt) -> Option<InputAt>","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221834,"byte_end":221837,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::input::Input::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":221899,"byte_end":221907,"line_start":108,"line_end":108,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::input::Input::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":222006,"byte_end":222014,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::input::Input::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1159},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":222758,"byte_end":222767,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"CharInput","qualname":"::input::CharInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" An input reader over characters.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":222747,"byte_end":222782,"line_start":140,"line_end":140,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":222886,"byte_end":222889,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<CharInput<'t>>::new","value":"fn (s: &'t [u8]) -> CharInput<'t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225150,"byte_end":225159,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"ByteInput","qualname":"::input::ByteInput","value":"ByteInput {  }","parent":null,"children":[{"krate":0,"index":2147484182},{"krate":0,"index":2147484183}],"decl_id":null,"docs":" An input reader over bytes.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225139,"byte_end":225208,"line_start":227,"line_end":230,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225313,"byte_end":225316,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteInput<'t>>::new","value":"fn (text: &'t [u8], only_utf8: bool) -> ByteInput<'t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1171},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":228831,"byte_end":228835,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"Char","qualname":"::input::Char","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inline representation of `Option<char>`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":228820,"byte_end":228841,"line_start":346,"line_end":346,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":228820,"byte_end":228841,"line_start":346,"line_end":346,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229159,"byte_end":229166,"line_start":360,"line_end":360,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Char>::is_none","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229358,"byte_end":229366,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"len_utf8","qualname":"<Char>::len_utf8","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229589,"byte_end":229601,"line_start":373,"line_end":373,"column_start":12,"column_end":24},"name":"is_word_char","qualname":"<Char>::is_word_char","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229821,"byte_end":229833,"line_start":380,"line_end":380,"column_start":12,"column_end":24},"name":"is_word_byte","qualname":"<Char>::is_word_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271157,"byte_end":271162,"line_start":4,"line_end":4,"column_start":12,"column_end":17},"name":"Teddy","qualname":"::literal::teddy_avx2::imp::Teddy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1195},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271204,"byte_end":271209,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Match","qualname":"::literal::teddy_avx2::imp::Match","value":"Match { pat, start, end }","parent":null,"children":[{"krate":0,"index":2147484193},{"krate":0,"index":2147484194},{"krate":0,"index":2147484195}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484193},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271220,"byte_end":271223,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"name":"pat","qualname":"::literal::teddy_avx2::imp::Match::pat","value":"usize","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484194},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271240,"byte_end":271245,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"start","qualname":"::literal::teddy_avx2::imp::Match::start","value":"usize","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484195},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271262,"byte_end":271265,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"name":"end","qualname":"::literal::teddy_avx2::imp::Match::end","value":"usize","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271301,"byte_end":271310,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"available","qualname":"<Teddy>::available","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271342,"byte_end":271345,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Teddy>::new","value":"fn (_pats: &Literals) -> Option<Teddy>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271401,"byte_end":271409,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"patterns","qualname":"<Teddy>::patterns","value":"fn (&self) -> &[Vec<u8>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271450,"byte_end":271453,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"len","qualname":"<Teddy>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271487,"byte_end":271503,"line_start":18,"line_end":18,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Teddy>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271537,"byte_end":271541,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"find","qualname":"<Teddy>::find","value":"fn (&self, _haystack: &[u8]) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271992,"byte_end":271997,"line_start":4,"line_end":4,"column_start":12,"column_end":17},"name":"Teddy","qualname":"::literal::teddy_ssse3::imp::Teddy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272039,"byte_end":272044,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Match","qualname":"::literal::teddy_ssse3::imp::Match","value":"Match { pat, start, end }","parent":null,"children":[{"krate":0,"index":2147484198},{"krate":0,"index":2147484199},{"krate":0,"index":2147484200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484198},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272055,"byte_end":272058,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"name":"pat","qualname":"::literal::teddy_ssse3::imp::Match::pat","value":"usize","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484199},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272075,"byte_end":272080,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"start","qualname":"::literal::teddy_ssse3::imp::Match::start","value":"usize","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272097,"byte_end":272100,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"name":"end","qualname":"::literal::teddy_ssse3::imp::Match::end","value":"usize","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272136,"byte_end":272145,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"available","qualname":"<Teddy>::available","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272177,"byte_end":272180,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Teddy>::new","value":"fn (_pats: &Literals) -> Option<Teddy>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272236,"byte_end":272244,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"patterns","qualname":"<Teddy>::patterns","value":"fn (&self) -> &[Vec<u8>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272285,"byte_end":272288,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"len","qualname":"<Teddy>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272322,"byte_end":272338,"line_start":18,"line_end":18,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Teddy>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272372,"byte_end":272376,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"find","qualname":"<Teddy>::find","value":"fn (&self, _haystack: &[u8]) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":231860,"byte_end":231875,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"LiteralSearcher","qualname":"::literal::LiteralSearcher","value":"LiteralSearcher {  }","parent":null,"children":[{"krate":0,"index":2147484201},{"krate":0,"index":2147484202},{"krate":0,"index":2147484203},{"krate":0,"index":2147484204}],"decl_id":null,"docs":" A prefix extracted from a compiled regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":232816,"byte_end":232821,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"empty","qualname":"<LiteralSearcher>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":232972,"byte_end":232980,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<LiteralSearcher>::prefixes","value":"fn (lits: Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":233173,"byte_end":233181,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<LiteralSearcher>::suffixes","value":"fn (lits: Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":234042,"byte_end":234050,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"complete","qualname":"<LiteralSearcher>::complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":234246,"byte_end":234250,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"find","qualname":"<LiteralSearcher>::find","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":234944,"byte_end":234954,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"find_start","qualname":"<LiteralSearcher>::find_start","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":235342,"byte_end":235350,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"find_end","qualname":"<LiteralSearcher>::find_end","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":235775,"byte_end":235779,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"iter","qualname":"<LiteralSearcher>::iter","value":"fn (&self) -> LiteralIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":236501,"byte_end":236504,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"lcp","qualname":"<LiteralSearcher>::lcp","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":236639,"byte_end":236642,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"lcs","qualname":"<LiteralSearcher>::lcs","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":236751,"byte_end":236759,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LiteralSearcher>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":236875,"byte_end":236878,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"len","qualname":"<LiteralSearcher>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237315,"byte_end":237331,"line_start":184,"line_end":184,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<LiteralSearcher>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483773},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240603,"byte_end":240608,"line_start":266,"line_end":266,"column_start":5,"column_end":10},"name":"Empty","qualname":"::literal::LiteralIter::Empty","value":"LiteralIter::Empty","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483774},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240614,"byte_end":240619,"line_start":267,"line_end":267,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::literal::LiteralIter::Bytes","value":"LiteralIter::Bytes(&'a [u8])","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483776},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240635,"byte_end":240641,"line_start":268,"line_end":268,"column_start":5,"column_end":11},"name":"Single","qualname":"::literal::LiteralIter::Single","value":"LiteralIter::Single(&'a [u8])","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483778},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240657,"byte_end":240659,"line_start":269,"line_end":269,"column_start":5,"column_end":7},"name":"AC","qualname":"::literal::LiteralIter::AC","value":"LiteralIter::AC(&'a [Literal])","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483780},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240680,"byte_end":240690,"line_start":270,"line_end":270,"column_start":5,"column_end":15},"name":"TeddySSSE3","qualname":"::literal::LiteralIter::TeddySSSE3","value":"LiteralIter::TeddySSSE3(&'a [Vec<u8>])","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483782},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240711,"byte_end":240720,"line_start":271,"line_end":271,"column_start":5,"column_end":14},"name":"TeddyAVX2","qualname":"::literal::LiteralIter::TeddyAVX2","value":"LiteralIter::TeddyAVX2(&'a [Vec<u8>])","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":554},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240581,"byte_end":240592,"line_start":265,"line_end":265,"column_start":10,"column_end":21},"name":"LiteralIter","qualname":"::literal::LiteralIter","value":"LiteralIter::{Empty, Bytes, Single, AC, TeddySSSE3, TeddyAVX2}","parent":null,"children":[{"krate":0,"index":2147483773},{"krate":0,"index":2147483774},{"krate":0,"index":2147483776},{"krate":0,"index":2147483778},{"krate":0,"index":2147483780},{"krate":0,"index":2147483782}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245320,"byte_end":245331,"line_start":420,"line_end":420,"column_start":12,"column_end":23},"name":"FreqyPacked","qualname":"::literal::FreqyPacked","value":"FreqyPacked {  }","parent":null,"children":[{"krate":0,"index":2147484222},{"krate":0,"index":2147484223},{"krate":0,"index":2147484224},{"krate":0,"index":2147484225},{"krate":0,"index":2147484226},{"krate":0,"index":2147484227}],"decl_id":null,"docs":" Provides an implementation of fast subtring search using frequency\n analysis.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":247774,"byte_end":247778,"line_start":496,"line_end":496,"column_start":12,"column_end":16},"name":"find","qualname":"<FreqyPacked>::find","value":"fn (&self, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":248606,"byte_end":248615,"line_start":522,"line_end":522,"column_start":12,"column_end":21},"name":"is_suffix","qualname":"<FreqyPacked>::is_suffix","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":248790,"byte_end":248793,"line_start":529,"line_end":529,"column_start":12,"column_end":15},"name":"len","qualname":"<FreqyPacked>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":248853,"byte_end":248861,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"char_len","qualname":"<FreqyPacked>::char_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":251052,"byte_end":251068,"line_start":586,"line_end":586,"column_start":12,"column_end":28},"name":"BoyerMooreSearch","qualname":"::literal::BoyerMooreSearch","value":"BoyerMooreSearch {  }","parent":null,"children":[{"krate":0,"index":2147484228},{"krate":0,"index":2147484229},{"krate":0,"index":2147484230},{"krate":0,"index":2147484231},{"krate":0,"index":2147484232}],"decl_id":null,"docs":" An implementation of Tuned Boyer-Moore as laid out by\n Andrew Hume and Daniel Sunday in \"Fast String Searching\".\n O(n) in the size of the input.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":273997,"byte_end":274000,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"Fsm","qualname":"::pikevm::Fsm","value":"Fsm {  }","parent":null,"children":[{"krate":0,"index":2147484233},{"krate":0,"index":2147484234},{"krate":0,"index":2147484235}],"decl_id":null,"docs":" An NFA simulation matching engine.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1238},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":274484,"byte_end":274489,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"Cache","qualname":"::pikevm::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484240},{"krate":0,"index":2147484241},{"krate":0,"index":2147484242}],"decl_id":null,"docs":" A cached allocation that can be reused on each execution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":275658,"byte_end":275661,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (_prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":276017,"byte_end":276021,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"exec","qualname":"<Fsm<'r, I>>::exec","value":"fn (prog: &'r Program, cache: &ProgramCache, matches: &mut [bool], slots: &mut [Slot], quit_after_match: bool, input: I, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":627},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":285865,"byte_end":285872,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"InstPtr","qualname":"::prog::InstPtr","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" `InstPtr` represents the index of an instruction in a regex program.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286000,"byte_end":286007,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Program","qualname":"::prog::Program","value":"Program { insts, matches, captures, capture_name_idx, start, byte_classes, only_utf8, is_bytes, is_dfa, is_reverse, is_anchored_start, is_anchored_end, has_unicode_word_boundary, prefixes, dfa_size_limit }","parent":null,"children":[{"krate":0,"index":2147484251},{"krate":0,"index":2147484252},{"krate":0,"index":2147484253},{"krate":0,"index":2147484254},{"krate":0,"index":2147484255},{"krate":0,"index":2147484256},{"krate":0,"index":2147484257},{"krate":0,"index":2147484258},{"krate":0,"index":2147484259},{"krate":0,"index":2147484260},{"krate":0,"index":2147484261},{"krate":0,"index":2147484262},{"krate":0,"index":2147484263},{"krate":0,"index":2147484264},{"krate":0,"index":2147484265}],"decl_id":null,"docs":" Program is a sequence of instructions and various facts about thos\n instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484251},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286077,"byte_end":286082,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"insts","qualname":"::prog::Program::insts","value":"std::vec::Vec<prog::Inst>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" A sequence of instructions that represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484252},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286247,"byte_end":286254,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"matches","qualname":"::prog::Program::matches","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Pointers to each Match instruction in the sequence.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484253},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286388,"byte_end":286396,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"captures","qualname":"::prog::Program::captures","value":"std::vec::Vec<std::option::Option<std::string::String>>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" The ordered sequence of all capture groups extracted from the AST.\n Unnamed groups are `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484254},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286489,"byte_end":286505,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"capture_name_idx","qualname":"::prog::Program::capture_name_idx","value":"std::sync::Arc<std::collections::HashMap<std::string::String, usize>>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Pointers to all named capture groups into `captures`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484255},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286862,"byte_end":286867,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::Program::start","value":"usize","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" A pointer to the start instruction. This can vary depending on how\n the program was compiled. For example, programs for use with the DFA\n engine have a `.*?` inserted at the beginning of unanchored regular\n expressions. The actual starting point of the program is after the\n `.*?`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":286981,"byte_end":286993,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"byte_classes","qualname":"::prog::Program::byte_classes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" A set of equivalence classes for discriminating bytes in the compiled\n program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484257},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287072,"byte_end":287081,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"only_utf8","qualname":"::prog::Program::only_utf8","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" When true, this program can only match valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484258},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287205,"byte_end":287213,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"is_bytes","qualname":"::prog::Program::is_bytes","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" When true, this program uses byte range instructions instead of Unicode\n range instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484259},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287402,"byte_end":287408,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"is_dfa","qualname":"::prog::Program::is_dfa","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" When true, the program is compiled for DFA matching. For example, this\n implies `is_bytes` and also inserts a preceding `.*?` for unanchored\n regexes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484260},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287514,"byte_end":287524,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"is_reverse","qualname":"::prog::Program::is_reverse","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" When true, the program matches text in reverse (for use only in the\n DFA).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484261},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287606,"byte_end":287623,"line_start":52,"line_end":52,"column_start":9,"column_end":26},"name":"is_anchored_start","qualname":"::prog::Program::is_anchored_start","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Whether the regex must match from the start of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484262},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287701,"byte_end":287716,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"is_anchored_end","qualname":"::prog::Program::is_anchored_end","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Whether the regex must match at the end of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484263},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287807,"byte_end":287832,"line_start":56,"line_end":56,"column_start":9,"column_end":34},"name":"has_unicode_word_boundary","qualname":"::prog::Program::has_unicode_word_boundary","value":"bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Whether this program contains a Unicode word boundary instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484264},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":287924,"byte_end":287932,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"prefixes","qualname":"::prog::Program::prefixes","value":"literal::LiteralSearcher","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" A possibly empty machine for very quickly matching prefix literals.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484265},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":288759,"byte_end":288773,"line_start":74,"line_end":74,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::prog::Program::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" A limit on the size of the cache that the DFA is allowed to use while\n matching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":288899,"byte_end":288902,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Program>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":289617,"byte_end":289621,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"skip","qualname":"<Program>::skip","value":"fn (&self, mut pc: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":289935,"byte_end":289949,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"leads_to_match","qualname":"<Program>::leads_to_match","value":"fn (&self, pc: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":290475,"byte_end":290488,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"needs_dotstar","qualname":"<Program>::needs_dotstar","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":290695,"byte_end":290705,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"uses_bytes","qualname":"<Program>::uses_bytes","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":290940,"byte_end":290949,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Program>::only_utf8","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":291097,"byte_end":291113,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Program>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484266},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":295793,"byte_end":295798,"line_start":266,"line_end":266,"column_start":5,"column_end":10},"name":"Match","qualname":"::prog::Inst::Match","value":"Inst::Match(usize)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Match indicates that the program has reached a match state.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484268},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":295928,"byte_end":295932,"line_start":269,"line_end":269,"column_start":5,"column_end":9},"name":"Save","qualname":"::prog::Inst::Save","value":"Inst::Save(InstSave)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Save causes the program to save the current location of the input in\n the slot indicated by InstSave.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484270},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296067,"byte_end":296072,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Split","qualname":"::prog::Inst::Split","value":"Inst::Split(InstSplit)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Split causes the program to diverge to one of two paths in the\n program, preferring goto1 in InstSplit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484272},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296232,"byte_end":296241,"line_start":275,"line_end":275,"column_start":5,"column_end":14},"name":"EmptyLook","qualname":"::prog::Inst::EmptyLook","value":"Inst::EmptyLook(InstEmptyLook)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" EmptyLook represents a zero-width assertion in a regex program. A\n zero-width assertion does not consume any of the input text.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484274},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296383,"byte_end":296387,"line_start":278,"line_end":278,"column_start":5,"column_end":9},"name":"Char","qualname":"::prog::Inst::Char","value":"Inst::Char(InstChar)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Char requires the regex program to match the character in InstChar at\n the current position in the input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484276},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296561,"byte_end":296567,"line_start":281,"line_end":281,"column_start":5,"column_end":11},"name":"Ranges","qualname":"::prog::Inst::Ranges","value":"Inst::Ranges(InstRanges)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Ranges requires the regex program to match the character at the current\n position in the input with one of the ranges specified in InstRanges.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484278},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296765,"byte_end":296770,"line_start":285,"line_end":285,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::prog::Inst::Bytes","value":"Inst::Bytes(InstBytes)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Bytes is like Ranges, except it expresses a single byte range. It is\n used in conjunction with Split instructions to implement multi-byte\n character classes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":295364,"byte_end":295368,"line_start":258,"line_end":258,"column_start":10,"column_end":14},"name":"Inst","qualname":"::prog::Inst","value":"Inst::{Match, Save, Split, EmptyLook, Char, Ranges, Bytes}","parent":null,"children":[{"krate":0,"index":2147484266},{"krate":0,"index":2147484268},{"krate":0,"index":2147484270},{"krate":0,"index":2147484272},{"krate":0,"index":2147484274},{"krate":0,"index":2147484276},{"krate":0,"index":2147484278}],"decl_id":null,"docs":" Inst is an instruction code in a Regex program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296874,"byte_end":296882,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Inst>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297080,"byte_end":297088,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"InstSave","qualname":"::prog::InstSave","value":"InstSave { goto, slot }","parent":null,"children":[{"krate":0,"index":2147484280},{"krate":0,"index":2147484281}],"decl_id":null,"docs":" Representation of the Save instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484280},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297152,"byte_end":297156,"line_start":302,"line_end":302,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstSave::goto","value":"usize","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" The next location to execute in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484281},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297311,"byte_end":297315,"line_start":305,"line_end":305,"column_start":9,"column_end":13},"name":"slot","qualname":"::prog::InstSave::slot","value":"usize","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" The capture slot (there are two slots for every capture in a regex,\n including the zeroth capture for the entire match).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297407,"byte_end":297416,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"InstSplit","qualname":"::prog::InstSplit","value":"InstSplit { goto1, goto2 }","parent":null,"children":[{"krate":0,"index":2147484282},{"krate":0,"index":2147484283}],"decl_id":null,"docs":" Representation of the Split instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484282},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297572,"byte_end":297577,"line_start":313,"line_end":313,"column_start":9,"column_end":14},"name":"goto1","qualname":"::prog::InstSplit::goto1","value":"usize","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" The first instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484283},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297742,"byte_end":297747,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"goto2","qualname":"::prog::InstSplit::goto2","value":"usize","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" The second instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1271},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297847,"byte_end":297860,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"InstEmptyLook","qualname":"::prog::InstEmptyLook","value":"InstEmptyLook { goto, look }","parent":null,"children":[{"krate":0,"index":2147484284},{"krate":0,"index":2147484285}],"decl_id":null,"docs":" Representation of the `EmptyLook` instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484284},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":297961,"byte_end":297965,"line_start":324,"line_end":324,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstEmptyLook::goto","value":"usize","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484285},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298035,"byte_end":298039,"line_start":326,"line_end":326,"column_start":9,"column_end":13},"name":"look","qualname":"::prog::InstEmptyLook::look","value":"prog::EmptyLook","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" The type of zero-width assertion to check.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484286},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298203,"byte_end":298212,"line_start":333,"line_end":333,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::prog::EmptyLook::StartLine","value":"EmptyLook::StartLine","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Start of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484287},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298248,"byte_end":298255,"line_start":335,"line_end":335,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::prog::EmptyLook::EndLine","value":"EmptyLook::EndLine","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" End of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484288},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298285,"byte_end":298294,"line_start":337,"line_end":337,"column_start":5,"column_end":14},"name":"StartText","qualname":"::prog::EmptyLook::StartText","value":"EmptyLook::StartText","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Start of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484289},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298322,"byte_end":298329,"line_start":339,"line_end":339,"column_start":5,"column_end":12},"name":"EndText","qualname":"::prog::EmptyLook::EndText","value":"EmptyLook::EndText","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" End of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484290},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298403,"byte_end":298415,"line_start":341,"line_end":341,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::prog::EmptyLook::WordBoundary","value":"EmptyLook::WordBoundary","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Word character on one side and non-word character on other.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484291},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298495,"byte_end":298510,"line_start":343,"line_end":343,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::prog::EmptyLook::NotWordBoundary","value":"EmptyLook::NotWordBoundary","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Word character on both sides or non-word character on both sides.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484292},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298545,"byte_end":298562,"line_start":345,"line_end":345,"column_start":5,"column_end":22},"name":"WordBoundaryAscii","qualname":"::prog::EmptyLook::WordBoundaryAscii","value":"EmptyLook::WordBoundaryAscii","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484293},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298601,"byte_end":298621,"line_start":347,"line_end":347,"column_start":5,"column_end":25},"name":"NotWordBoundaryAscii","qualname":"::prog::EmptyLook::NotWordBoundaryAscii","value":"EmptyLook::NotWordBoundaryAscii","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Not ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1276},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298155,"byte_end":298164,"line_start":331,"line_end":331,"column_start":10,"column_end":19},"name":"EmptyLook","qualname":"::prog::EmptyLook","value":"EmptyLook::{StartLine, EndLine, StartText, EndText, WordBoundary, NotWordBoundary, WordBoundaryAscii, NotWordBoundaryAscii}","parent":null,"children":[{"krate":0,"index":2147484286},{"krate":0,"index":2147484287},{"krate":0,"index":2147484288},{"krate":0,"index":2147484289},{"krate":0,"index":2147484290},{"krate":0,"index":2147484291},{"krate":0,"index":2147484292},{"krate":0,"index":2147484293}],"decl_id":null,"docs":" The set of zero-width match instructions.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298146,"byte_end":298624,"line_start":331,"line_end":348,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298146,"byte_end":298624,"line_start":331,"line_end":348,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298705,"byte_end":298713,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"InstChar","qualname":"::prog::InstChar","value":"InstChar { goto, c }","parent":null,"children":[{"krate":0,"index":2147484294},{"krate":0,"index":2147484295}],"decl_id":null,"docs":" Representation of the Char instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484294},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298814,"byte_end":298818,"line_start":355,"line_end":355,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstChar::goto","value":"usize","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484295},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298868,"byte_end":298869,"line_start":357,"line_end":357,"column_start":9,"column_end":10},"name":"c","qualname":"::prog::InstChar::c","value":"char","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" The character to test.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":298961,"byte_end":298971,"line_start":362,"line_end":362,"column_start":12,"column_end":22},"name":"InstRanges","qualname":"::prog::InstRanges","value":"InstRanges { goto, ranges }","parent":null,"children":[{"krate":0,"index":2147484296},{"krate":0,"index":2147484297}],"decl_id":null,"docs":" Representation of the Ranges instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484296},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":299072,"byte_end":299076,"line_start":365,"line_end":365,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstRanges::goto","value":"usize","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484297},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":299151,"byte_end":299157,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"name":"ranges","qualname":"::prog::InstRanges::ranges","value":"std::vec::Vec<(char, char)>","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The set of Unicode scalar value ranges to test.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":299284,"byte_end":299291,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstRanges>::matches","value":"fn (&self, c: Char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300077,"byte_end":300086,"line_start":397,"line_end":397,"column_start":12,"column_end":21},"name":"num_chars","qualname":"<InstRanges>::num_chars","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1296},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300341,"byte_end":300350,"line_start":407,"line_end":407,"column_start":12,"column_end":21},"name":"InstBytes","qualname":"::prog::InstBytes","value":"InstBytes { goto, start, end }","parent":null,"children":[{"krate":0,"index":2147484298},{"krate":0,"index":2147484299},{"krate":0,"index":2147484300}],"decl_id":null,"docs":" Representation of the Bytes instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484298},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300451,"byte_end":300455,"line_start":410,"line_end":410,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstBytes::goto","value":"usize","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484299},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300524,"byte_end":300529,"line_start":412,"line_end":412,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::InstBytes::start","value":"u8","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" The start (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484300},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300591,"byte_end":300594,"line_start":414,"line_end":414,"column_start":9,"column_end":12},"name":"end","qualname":"::prog::InstBytes::end","value":"u8","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" The end (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300700,"byte_end":300707,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstBytes>::matches","value":"fn (&self, byte: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301398,"byte_end":301410,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"RegexOptions","qualname":"::re_builder::RegexOptions","value":"RegexOptions { pats, size_limit, dfa_size_limit, nest_limit, case_insensitive, multi_line, dot_matches_new_line, swap_greed, ignore_whitespace, unicode, octal }","parent":null,"children":[{"krate":0,"index":2147484301},{"krate":0,"index":2147484302},{"krate":0,"index":2147484303},{"krate":0,"index":2147484304},{"krate":0,"index":2147484305},{"krate":0,"index":2147484306},{"krate":0,"index":2147484307},{"krate":0,"index":2147484308},{"krate":0,"index":2147484309},{"krate":0,"index":2147484310},{"krate":0,"index":2147484311}],"decl_id":null,"docs":" The set of user configurable options for compiling zero or more regexes.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301364,"byte_end":301386,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2147484301},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301421,"byte_end":301425,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"pats","qualname":"::re_builder::RegexOptions::pats","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484302},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301448,"byte_end":301458,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"size_limit","qualname":"::re_builder::RegexOptions::size_limit","value":"usize","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484303},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301475,"byte_end":301489,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::re_builder::RegexOptions::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484304},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301506,"byte_end":301516,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"nest_limit","qualname":"::re_builder::RegexOptions::nest_limit","value":"u32","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484305},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301531,"byte_end":301547,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"name":"case_insensitive","qualname":"::re_builder::RegexOptions::case_insensitive","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484306},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301563,"byte_end":301573,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"multi_line","qualname":"::re_builder::RegexOptions::multi_line","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484307},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301589,"byte_end":301609,"line_start":21,"line_end":21,"column_start":9,"column_end":29},"name":"dot_matches_new_line","qualname":"::re_builder::RegexOptions::dot_matches_new_line","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484308},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301625,"byte_end":301635,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"name":"swap_greed","qualname":"::re_builder::RegexOptions::swap_greed","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484309},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301651,"byte_end":301668,"line_start":23,"line_end":23,"column_start":9,"column_end":26},"name":"ignore_whitespace","qualname":"::re_builder::RegexOptions::ignore_whitespace","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484310},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301684,"byte_end":301691,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"unicode","qualname":"::re_builder::RegexOptions::unicode","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484311},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301707,"byte_end":301712,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"octal","qualname":"::re_builder::RegexOptions::octal","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":316838,"byte_end":316843,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_bytes::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2147484324},{"krate":0,"index":2147484325},{"krate":0,"index":2147484326}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":316827,"byte_end":316905,"line_start":30,"line_end":34,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":316827,"byte_end":316905,"line_start":30,"line_end":34,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":317024,"byte_end":317029,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<Match<'t>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":317168,"byte_end":317171,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"end","qualname":"<Match<'t>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":317273,"byte_end":317281,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Match<'t>>::as_bytes","value":"fn (&self) -> &'t [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":318295,"byte_end":318300,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_bytes::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":319359,"byte_end":319362,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":320093,"byte_end":320101,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":320963,"byte_end":320967,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t, > (&self, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":321683,"byte_end":321692,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":324699,"byte_end":324707,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t, > (&self, text: &'t [u8]) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":326137,"byte_end":326150,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":327068,"byte_end":327073,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":328089,"byte_end":328095,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't, > (&'r self, text: &'t [u8], limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":332878,"byte_end":332885,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":333342,"byte_end":333353,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":333822,"byte_end":333830,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t [u8], limit: usize, mut rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":336305,"byte_end":336319,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":336726,"byte_end":336743,"line_start":572,"line_end":572,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &[u8], start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":337206,"byte_end":337217,"line_start":587,"line_end":587,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":337633,"byte_end":337640,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t, > (&self, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338196,"byte_end":338212,"line_start":614,"line_end":614,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t, > (&self, locs: &mut Locations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338557,"byte_end":338563,"line_start":628,"line_end":628,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338686,"byte_end":338699,"line_start":633,"line_end":633,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338835,"byte_end":338847,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":339047,"byte_end":339056,"line_start":645,"line_end":645,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> Locations","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":717},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":339521,"byte_end":339528,"line_start":658,"line_end":658,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_bytes::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":340101,"byte_end":340115,"line_start":676,"line_end":676,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_bytes::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":340696,"byte_end":340701,"line_start":694,"line_end":694,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_bytes::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2147483834},{"krate":0,"index":2147483835}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":729},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":341684,"byte_end":341690,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_bytes::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":2147483840},{"krate":0,"index":2147483841}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":342385,"byte_end":342397,"line_start":757,"line_end":757,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_bytes::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":738},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":343321,"byte_end":343329,"line_start":783,"line_end":783,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_bytes::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":2147483852},{"krate":0,"index":2147483853},{"krate":0,"index":2147483854}],"decl_id":null,"docs":" Captures represents a group of captured byte strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":344254,"byte_end":344257,"line_start":809,"line_end":809,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures<'t>>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":344542,"byte_end":344546,"line_start":815,"line_end":815,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures<'t>>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":344978,"byte_end":344982,"line_start":824,"line_end":824,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures<'t>>::iter","value":"fn <'c, > (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":346026,"byte_end":346032,"line_start":847,"line_end":847,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures<'t>>::expand","value":"fn (&self, replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":346343,"byte_end":346346,"line_start":856,"line_end":856,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures<'t>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":349476,"byte_end":349493,"line_start":953,"line_end":953,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_bytes::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":2147483877},{"krate":0,"index":2147483878}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":763},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":350126,"byte_end":350134,"line_start":973,"line_end":973,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_bytes::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":350420,"byte_end":350434,"line_start":981,"line_end":981,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_bytes::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":350845,"byte_end":350857,"line_start":990,"line_end":990,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_bytes::Replacer::no_expansion","value":"fn <'r, > (&'r mut self) -> Option<Cow<'r, [u8]>>","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":351588,"byte_end":351594,"line_start":1015,"line_end":1015,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::re_bytes::Replacer::by_ref","value":"fn <'r, > (&'r mut self) -> ReplacerRef<'r, Self>","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1396},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":351822,"byte_end":351833,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::re_bytes::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":775},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":353097,"byte_end":353105,"line_start":1062,"line_end":1062,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_bytes::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal byte string replacement.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":782},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":368538,"byte_end":368542,"line_start":14,"line_end":14,"column_start":10,"column_end":14},"name":"Slot","qualname":"::re_trait::Slot","value":"Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Slot is a single saved capture location. Note that there are two slots for\n every capture in a regular expression (one slot each for the start and end\n of the capture).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":368751,"byte_end":368760,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Locations","qualname":"::re_trait::Locations","value":"","parent":null,"children":[],"decl_id":null,"docs":" Locations represents the offsets of each capturing group in a regex for\n a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":369089,"byte_end":369092,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"pos","qualname":"<Locations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":369536,"byte_end":369540,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"iter","qualname":"<Locations>::iter","value":"fn (&self) -> SubCapturesPosIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":369835,"byte_end":369838,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<Locations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":788},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":370017,"byte_end":370025,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"as_slots","qualname":"::re_trait::as_slots","value":"fn (locs: &mut Locations) -> &mut [Slot]","parent":null,"children":[],"decl_id":null,"docs":" This is a hack to make Locations -> &mut [Slot] be available internally\n without exposing it in the public API.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":370314,"byte_end":370332,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"SubCapturesPosIter","qualname":"::re_trait::SubCapturesPosIter","value":"SubCapturesPosIter {  }","parent":null,"children":[{"krate":0,"index":2147483898},{"krate":0,"index":2147483899}],"decl_id":null,"docs":" An iterator over capture group positions for a particular match of a\n regular expression.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":793},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":371535,"byte_end":371552,"line_start":99,"line_end":99,"column_start":11,"column_end":28},"name":"RegularExpression","qualname":"::re_trait::RegularExpression","value":"RegularExpression:  Sized","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":794},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":371605,"byte_end":371609,"line_start":101,"line_end":101,"column_start":10,"column_end":14},"name":"Text","qualname":"::re_trait::RegularExpression::Text","value":"type Text: ?Sized;","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" The type of the haystack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":371784,"byte_end":371793,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"slots_len","qualname":"::re_trait::RegularExpression::slots_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":371889,"byte_end":371898,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"locations","qualname":"::re_trait::RegularExpression::locations","value":"fn (&self) -> Locations","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":372244,"byte_end":372260,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"next_after_empty","qualname":"::re_trait::RegularExpression::next_after_empty","value":"fn (&self, text: &Self::Text, i: usize) -> usize","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":372367,"byte_end":372384,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"shortest_match_at","qualname":"::re_trait::RegularExpression::shortest_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<usize>","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":372540,"byte_end":372551,"line_start":127,"line_end":127,"column_start":8,"column_end":19},"name":"is_match_at","qualname":"::re_trait::RegularExpression::is_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> bool","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":372705,"byte_end":372712,"line_start":134,"line_end":134,"column_start":8,"column_end":15},"name":"find_at","qualname":"::re_trait::RegularExpression::find_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":372947,"byte_end":372963,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"read_captures_at","qualname":"::re_trait::RegularExpression::read_captures_at","value":"fn (&self, locs: &mut Locations, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":373196,"byte_end":373205,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::re_trait::RegularExpression::find_iter","value":"fn (self, text: &Self::Text) -> Matches<Self>","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":373527,"byte_end":373540,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"captures_iter","qualname":"::re_trait::RegularExpression::captures_iter","value":"fn (self, text: &Self::Text) -> CaptureMatches<Self>","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":804},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":373756,"byte_end":373763,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_trait::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":2147483902},{"krate":0,"index":2147483903},{"krate":0,"index":2147483904},{"krate":0,"index":2147483905}],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":374022,"byte_end":374026,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"text","qualname":"<Matches<'t, R>>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":374124,"byte_end":374129,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"regex","qualname":"<Matches<'t, R>>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":811},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":375329,"byte_end":375343,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_trait::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches with\n captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":375540,"byte_end":375544,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"text","qualname":"<CaptureMatches<'t, R>>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":375646,"byte_end":375651,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"regex","qualname":"<CaptureMatches<'t, R>>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377543,"byte_end":377549,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"escape","qualname":"::re_unicode::escape","value":"fn (text: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377800,"byte_end":377805,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_unicode::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2147484371},{"krate":0,"index":2147484372},{"krate":0,"index":2147484373}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377789,"byte_end":377866,"line_start":39,"line_end":43,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377789,"byte_end":377866,"line_start":39,"line_end":43,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377985,"byte_end":377990,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"start","qualname":"<Match<'t>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":378129,"byte_end":378132,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"end","qualname":"<Match<'t>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":378234,"byte_end":378240,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match<'t>>::as_str","value":"fn (&self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":380945,"byte_end":380950,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_unicode::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching Unicode strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381892,"byte_end":381895,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":382625,"byte_end":382633,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":383509,"byte_end":383513,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t, > (&self, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":384227,"byte_end":384236,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't, > (&'r self, text: &'t str) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387272,"byte_end":387280,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t, > (&self, text: &'t str) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":388598,"byte_end":388611,"line_start":345,"line_end":345,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't, > (&'r self, text: &'t str) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":389470,"byte_end":389475,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't, > (&'r self, text: &'t str) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":390463,"byte_end":390469,"line_start":397,"line_end":397,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't, > (&'r self, text: &'t str, limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":395006,"byte_end":395013,"line_start":509,"line_end":509,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":395470,"byte_end":395481,"line_start":523,"line_end":523,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":395950,"byte_end":395958,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t str, limit: usize, mut rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":398914,"byte_end":398928,"line_start":617,"line_end":617,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":399334,"byte_end":399351,"line_start":628,"line_end":628,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &str, start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":399817,"byte_end":399828,"line_start":643,"line_end":643,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &str, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":400243,"byte_end":400250,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t, > (&self, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":400820,"byte_end":400836,"line_start":671,"line_end":671,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t, > (&self, locs: &mut Locations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":401210,"byte_end":401216,"line_start":687,"line_end":687,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":401339,"byte_end":401352,"line_start":692,"line_end":692,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":401488,"byte_end":401500,"line_start":697,"line_end":697,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":401700,"byte_end":401709,"line_start":704,"line_end":704,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> Locations","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":402040,"byte_end":402052,"line_start":715,"line_end":715,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_unicode::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":402641,"byte_end":402646,"line_start":736,"line_end":736,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_unicode::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2147483949},{"krate":0,"index":2147483950}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":403622,"byte_end":403628,"line_start":771,"line_end":771,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_unicode::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":2147483955},{"krate":0,"index":2147483956}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":404613,"byte_end":404621,"line_start":804,"line_end":804,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_unicode::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":2147483961},{"krate":0,"index":2147483962},{"krate":0,"index":2147483963}],"decl_id":null,"docs":" Captures represents a group of captured strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":405509,"byte_end":405512,"line_start":830,"line_end":830,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures<'t>>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":405797,"byte_end":405801,"line_start":836,"line_end":836,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures<'t>>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":406233,"byte_end":406237,"line_start":845,"line_end":845,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures<'t>>::iter","value":"fn <'c, > (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":407281,"byte_end":407287,"line_start":868,"line_end":868,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures<'t>>::expand","value":"fn (&self, replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":407594,"byte_end":407597,"line_start":877,"line_end":877,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures<'t>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":410275,"byte_end":410292,"line_start":959,"line_end":959,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_unicode::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":2147483986},{"krate":0,"index":2147483987}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":410919,"byte_end":410933,"line_start":980,"line_end":980,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_unicode::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":411618,"byte_end":411625,"line_start":1001,"line_end":1001,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_unicode::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":921},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":412191,"byte_end":412199,"line_start":1017,"line_end":1017,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_unicode::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":412506,"byte_end":412520,"line_start":1025,"line_end":1025,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_unicode::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut String) -> ()","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":412925,"byte_end":412937,"line_start":1034,"line_end":1034,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_unicode::Replacer::no_expansion","value":"fn <'r, > (&'r mut self) -> Option<Cow<'r, str>>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":413658,"byte_end":413664,"line_start":1059,"line_end":1059,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::re_unicode::Replacer::by_ref","value":"fn <'r, > (&'r mut self) -> ReplacerRef<'r, Self>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1527},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":413892,"byte_end":413903,"line_start":1068,"line_end":1068,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::re_unicode::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":415140,"byte_end":415148,"line_start":1106,"line_end":1106,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_unicode::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal string replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416027,"byte_end":416036,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SparseSet","qualname":"::sparse::SparseSet","value":"SparseSet {  }","parent":null,"children":[{"krate":0,"index":2147484388},{"krate":0,"index":2147484389},{"krate":0,"index":2147484390}],"decl_id":null,"docs":" A sparse set used for representing ordered NFA states.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416510,"byte_end":416513,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseSet>::new","value":"fn (size: usize) -> SparseSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416680,"byte_end":416683,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"len","qualname":"<SparseSet>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416738,"byte_end":416746,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416805,"byte_end":416813,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SparseSet>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416875,"byte_end":416881,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"insert","qualname":"<SparseSet>::insert","value":"fn (&mut self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":417041,"byte_end":417049,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"contains","qualname":"<SparseSet>::contains","value":"fn (&self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":417183,"byte_end":417188,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"clear","qualname":"<SparseSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23087,"byte_end":23095,"line_start":675,"line_end":675,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"C:\\Users\\S.Percentage\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regex-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":970}],"decl_id":null,"docs":" The `internal` module exists to support suspicious activity, such as\n testing different matching engines and supporting the `regex-debug` CLI\n utility.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23051,"byte_end":23078,"line_start":674,"line_end":674,"column_start":1,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26054,"byte_end":26059,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26721,"byte_end":26728,"line_start":89,"line_end":89,"column_start":32,"column_end":39},"kind":"Impl","from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44418,"byte_end":44426,"line_start":48,"line_end":48,"column_start":6,"column_end":14},"kind":"Impl","from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":72159,"byte_end":72168,"line_start":778,"line_end":778,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":74345,"byte_end":74353,"line_start":841,"line_end":841,"column_start":6,"column_end":14},"kind":"Impl","from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":75286,"byte_end":75298,"line_start":874,"line_end":874,"column_start":14,"column_end":26},"kind":"Impl","from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":80168,"byte_end":80179,"line_start":1006,"line_end":1006,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":81378,"byte_end":81390,"line_start":1047,"line_end":1047,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":94379,"byte_end":94385,"line_start":224,"line_end":224,"column_start":9,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":96680,"byte_end":96688,"line_start":295,"line_end":295,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":179},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":97110,"byte_end":97115,"line_start":312,"line_end":312,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":101346,"byte_end":101351,"line_start":423,"line_end":423,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":102140,"byte_end":102150,"line_start":447,"line_end":447,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":102454,"byte_end":102457,"line_start":457,"line_end":457,"column_start":10,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":149821,"byte_end":149832,"line_start":1601,"line_end":1601,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":151693,"byte_end":151703,"line_start":1658,"line_end":1658,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":152139,"byte_end":152143,"line_start":1684,"line_end":1684,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":152719,"byte_end":152724,"line_start":1709,"line_end":1709,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1052},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":152995,"byte_end":153006,"line_start":1719,"line_end":1719,"column_start":21,"column_end":32},"kind":"Impl","from":{"krate":0,"index":1041},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":153428,"byte_end":153442,"line_start":1733,"line_end":1733,"column_start":25,"column_end":39},"kind":"Impl","from":{"krate":0,"index":255},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,100,102,97,46,114,115],"byte_start":153948,"byte_end":153958,"line_start":1751,"line_end":1751,"column_start":21,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1083},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":159057,"byte_end":159062,"line_start":31,"line_end":31,"column_start":30,"column_end":35},"kind":"Impl","from":{"krate":0,"index":1096},"to":{"krate":1,"index":1202}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":159403,"byte_end":159408,"line_start":45,"line_end":45,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1096},"to":{"krate":2,"index":3531}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":160057,"byte_end":160062,"line_start":62,"line_end":62,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1096},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":164703,"byte_end":164714,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":173290,"byte_end":173303,"line_start":337,"line_end":337,"column_start":32,"column_end":45},"kind":"Impl","from":{"krate":0,"index":308},"to":{"krate":0,"index":793}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":174341,"byte_end":174351,"line_start":372,"line_end":372,"column_start":32,"column_end":42},"kind":"Impl","from":{"krate":0,"index":1102},"to":{"krate":0,"index":793}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":183538,"byte_end":183548,"line_start":605,"line_end":605,"column_start":10,"column_end":20},"kind":"Impl","from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":198356,"byte_end":198369,"line_start":1069,"line_end":1069,"column_start":10,"column_end":23},"kind":"Impl","from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":198493,"byte_end":198497,"line_start":1075,"line_end":1075,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":200326,"byte_end":200330,"line_start":1132,"line_end":1132,"column_start":16,"column_end":20},"kind":"Impl","from":{"krate":0,"index":307},"to":{"krate":2,"index":1213}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":200480,"byte_end":200492,"line_start":1141,"line_end":1141,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":1105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":205842,"byte_end":205859,"line_start":1282,"line_end":1282,"column_start":6,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":210996,"byte_end":210999,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1142},"to":{"krate":2,"index":1232}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":211095,"byte_end":211098,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1142},"to":{"krate":2,"index":1232}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":219722,"byte_end":219729,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":222793,"byte_end":222802,"line_start":142,"line_end":142,"column_start":10,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":222976,"byte_end":222985,"line_start":149,"line_end":149,"column_start":25,"column_end":34},"kind":"Impl","from":{"krate":0,"index":1159},"to":{"krate":2,"index":951}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":223091,"byte_end":223100,"line_start":157,"line_end":157,"column_start":20,"column_end":29},"kind":"Impl","from":{"krate":0,"index":1159},"to":{"krate":0,"index":425}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225219,"byte_end":225228,"line_start":232,"line_end":232,"column_start":10,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225490,"byte_end":225499,"line_start":242,"line_end":242,"column_start":25,"column_end":34},"kind":"Impl","from":{"krate":0,"index":1165},"to":{"krate":2,"index":951}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225608,"byte_end":225617,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"kind":"Impl","from":{"krate":0,"index":1165},"to":{"krate":0,"index":425}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":228863,"byte_end":228867,"line_start":348,"line_end":348,"column_start":21,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1171},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229077,"byte_end":229081,"line_start":357,"line_end":357,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230036,"byte_end":230040,"line_start":388,"line_end":388,"column_start":21,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1171},"to":{"krate":2,"index":1232}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230122,"byte_end":230126,"line_start":392,"line_end":392,"column_start":29,"column_end":33},"kind":"Impl","from":{"krate":0,"index":1171},"to":{"krate":2,"index":1232}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230249,"byte_end":230253,"line_start":398,"line_end":398,"column_start":26,"column_end":30},"kind":"Impl","from":{"krate":0,"index":1171},"to":{"krate":2,"index":1119}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230482,"byte_end":230486,"line_start":408,"line_end":408,"column_start":27,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1171},"to":{"krate":2,"index":1146}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":271282,"byte_end":271287,"line_start":13,"line_end":13,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,102,97,108,108,98,97,99,107,46,114,115],"byte_start":272117,"byte_end":272122,"line_start":13,"line_end":13,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":232712,"byte_end":232727,"line_start":58,"line_end":58,"column_start":6,"column_end":21},"kind":"Impl","from":{"krate":0,"index":1210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237806,"byte_end":237813,"line_start":198,"line_end":198,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240762,"byte_end":240773,"line_start":274,"line_end":274,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":0,"index":554},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":242488,"byte_end":242501,"line_start":337,"line_end":337,"column_start":6,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":246408,"byte_end":246419,"line_start":446,"line_end":446,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":251726,"byte_end":251742,"line_start":609,"line_end":609,"column_start":6,"column_end":22},"kind":"Impl","from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":275541,"byte_end":275546,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":275840,"byte_end":275843,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":284967,"byte_end":284974,"line_start":355,"line_end":355,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":288790,"byte_end":288797,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":291751,"byte_end":291758,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1253},"to":{"krate":2,"index":951}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":291877,"byte_end":291884,"line_start":169,"line_end":169,"column_start":21,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1253},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":296791,"byte_end":296795,"line_start":288,"line_end":288,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":299186,"byte_end":299196,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":300608,"byte_end":300617,"line_start":417,"line_end":417,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":301740,"byte_end":301752,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"kind":"Impl","from":{"krate":0,"index":1301},"to":{"krate":2,"index":1219}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":316916,"byte_end":316921,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":318331,"byte_end":318336,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":2,"index":3531}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":318513,"byte_end":318518,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":318823,"byte_end":318828,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":2,"index":1232}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":318912,"byte_end":318917,"line_start":104,"line_end":104,"column_start":18,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":2,"index":2956}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":319128,"byte_end":319133,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":335504,"byte_end":335509,"line_start":539,"line_end":539,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338487,"byte_end":338492,"line_start":626,"line_end":626,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":339604,"byte_end":339611,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"kind":"Impl","from":{"krate":0,"index":717},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":340198,"byte_end":340212,"line_start":678,"line_end":678,"column_start":27,"column_end":41},"kind":"Impl","from":{"krate":0,"index":721},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":340787,"byte_end":340792,"line_start":699,"line_end":699,"column_start":27,"column_end":32},"kind":"Impl","from":{"krate":0,"index":725},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":341771,"byte_end":341777,"line_start":734,"line_end":734,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":0,"index":729},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":342466,"byte_end":342478,"line_start":759,"line_end":759,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":733},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":343436,"byte_end":343444,"line_start":789,"line_end":789,"column_start":10,"column_end":18},"kind":"Impl","from":{"krate":0,"index":738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":346422,"byte_end":346430,"line_start":861,"line_end":861,"column_start":25,"column_end":33},"kind":"Impl","from":{"krate":0,"index":738},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":346657,"byte_end":346670,"line_start":869,"line_end":869,"column_start":29,"column_end":42},"kind":"Impl","from":{"krate":0,"index":747},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":348161,"byte_end":348169,"line_start":914,"line_end":914,"column_start":27,"column_end":35},"kind":"Impl","from":{"krate":0,"index":738},"to":{"krate":2,"index":998}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":348805,"byte_end":348813,"line_start":935,"line_end":935,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":0,"index":738},"to":{"krate":2,"index":998}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":349597,"byte_end":349614,"line_start":958,"line_end":958,"column_start":27,"column_end":44},"kind":"Impl","from":{"krate":0,"index":759},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":351916,"byte_end":351927,"line_start":1026,"line_end":1026,"column_start":50,"column_end":61},"kind":"Impl","from":{"krate":0,"index":1396},"to":{"krate":0,"index":763}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":352510,"byte_end":352511,"line_start":1048,"line_end":1048,"column_start":22,"column_end":23},"kind":"Impl","from":{"krate":0,"index":2147483891},"to":{"krate":0,"index":763}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":353148,"byte_end":353156,"line_start":1064,"line_end":1064,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":775},"to":{"krate":0,"index":763}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":368779,"byte_end":368788,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":370405,"byte_end":370423,"line_start":69,"line_end":69,"column_start":23,"column_end":41},"kind":"Impl","from":{"krate":0,"index":789},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":371554,"byte_end":371559,"line_start":99,"line_end":99,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":793}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":373914,"byte_end":373921,"line_start":181,"line_end":181,"column_start":13,"column_end":20},"kind":"Impl","from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":374196,"byte_end":374203,"line_start":193,"line_end":193,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":0,"index":804},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":375425,"byte_end":375439,"line_start":228,"line_end":228,"column_start":13,"column_end":27},"kind":"Impl","from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":375724,"byte_end":375738,"line_start":240,"line_end":240,"column_start":26,"column_end":40},"kind":"Impl","from":{"krate":0,"index":811},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377877,"byte_end":377882,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":380981,"byte_end":380986,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":2,"index":3531}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381163,"byte_end":381168,"line_start":146,"line_end":146,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381356,"byte_end":381361,"line_start":154,"line_end":154,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":2,"index":1232}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381445,"byte_end":381450,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":2,"index":2956}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381661,"byte_end":381666,"line_start":170,"line_end":170,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":398121,"byte_end":398126,"line_start":595,"line_end":595,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":401140,"byte_end":401145,"line_start":685,"line_end":685,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":402121,"byte_end":402133,"line_start":717,"line_end":717,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":878},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":402732,"byte_end":402737,"line_start":741,"line_end":741,"column_start":27,"column_end":32},"kind":"Impl","from":{"krate":0,"index":883},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":403709,"byte_end":403715,"line_start":776,"line_end":776,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":0,"index":887},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":404727,"byte_end":404735,"line_start":810,"line_end":810,"column_start":10,"column_end":18},"kind":"Impl","from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":407673,"byte_end":407681,"line_start":882,"line_end":882,"column_start":25,"column_end":33},"kind":"Impl","from":{"krate":0,"index":891},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":407908,"byte_end":407921,"line_start":890,"line_end":890,"column_start":29,"column_end":42},"kind":"Impl","from":{"krate":0,"index":900},"to":{"krate":2,"index":3529}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":408968,"byte_end":408976,"line_start":920,"line_end":920,"column_start":27,"column_end":35},"kind":"Impl","from":{"krate":0,"index":891},"to":{"krate":2,"index":998}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":409608,"byte_end":409616,"line_start":941,"line_end":941,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":0,"index":891},"to":{"krate":2,"index":998}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":410396,"byte_end":410413,"line_start":964,"line_end":964,"column_start":27,"column_end":44},"kind":"Impl","from":{"krate":0,"index":909},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":411019,"byte_end":411033,"line_start":982,"line_end":982,"column_start":27,"column_end":41},"kind":"Impl","from":{"krate":0,"index":913},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":411704,"byte_end":411711,"line_start":1003,"line_end":1003,"column_start":27,"column_end":34},"kind":"Impl","from":{"krate":0,"index":917},"to":{"krate":2,"index":1692}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":413986,"byte_end":413997,"line_start":1070,"line_end":1070,"column_start":50,"column_end":61},"kind":"Impl","from":{"krate":0,"index":1527},"to":{"krate":0,"index":921}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":414574,"byte_end":414575,"line_start":1092,"line_end":1092,"column_start":22,"column_end":23},"kind":"Impl","from":{"krate":0,"index":2147484013},"to":{"krate":0,"index":921}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":415190,"byte_end":415198,"line_start":1108,"line_end":1108,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":933},"to":{"krate":0,"index":921}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":416487,"byte_end":416496,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,46,80,101,114,99,101,110,116,97,103,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,103,101,120,45,49,46,48,46,48,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":417249,"byte_end":417258,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1530},"to":{"krate":2,"index":951}}]}